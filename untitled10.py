# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cSaKhgCCwzcG_8iVy89Ilss1IyJGScCo
"""

img=cv2.imread('poll.png')


# Label connected regions in the binary image
labeled_img = measure.label(dilation)


# Apply connected-component labeling to identify regions
labels = measure.label(closing)


    
# Loop over each labeled region and draw a dot at its centroid
for region in measure.regionprops(labels):
    for region in measure.regionprops(labels) :
      area = region.area
      if area > 13:
        # Get centroid coordinates
        y, x = region.centroid
        # Draw dot at centroid on original image
        cv2.circle(img, (int(x), int(y)), 5, (0, 0, 255), -1)
# Display the original image with centroids marked
cv2_imshow( img)

print(red_dot_count)

labels = measure.label(dilation)
num_regions = np.max(labels)
print("Number of regions found: ", num_regions)
# Extract properties of each labeled region
props = measure.regionprops(labeled_img)

# Loop over each labeled region and draw a bounding box around it
for prop in props:
    bbox = prop.bbox
    min_row, min_col, max_row, max_col = bbox
    rect = np.array([[min_col, min_row], [max_col, min_row], 
                     [max_col, max_row], [min_col, max_row], 
                     [min_col, min_row]])
    img[min_row:max_row, min_col:max_col, :] = (0, 0, 255)  # Draw a red bounding box