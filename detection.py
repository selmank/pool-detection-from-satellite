# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lBMt_JtCsMn3HyjaRnihJqGdg1_q2D_H
"""

!pip install rasterio

import rasterio
from google.colab.patches import cv2_imshow
import matplotlib.pyplot as plt
import numpy as np
import cv2
from skimage import morphology, measure
from skimage import io
from google.colab.patches import cv2_imshow

with rasterio.open('poll.png') as src:
    
    # read  blue band channel 
    visible_blue = src.read(3)

cv2_imshow(visible_blue)

img=cv2.imread('poll.png')
#img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
##img = cv2.GaussianBlur(img, (3,3), 0)

cv2_imshow(img)

blue = img[:,:,2]

cv2_imshow(blue)

# Plot the histogram
plt.hist(visible_blue.ravel(), bins=256, range=(0, 256), color='blue')
plt.title(' histogram of the blue band')
plt.xlabel('Pixel Value')
plt.ylabel('Frequency')
plt.show()

# Set the threshold value
thresh_value = 240

# Binarize the image using the threshold value
ret, thresh = cv2.threshold(visible_blue, thresh_value, 255, cv2.THRESH_BINARY)

# Display the binarized images

cv2_imshow( thresh)

# Define the kernel for dilation
kernel = np.ones((15,15), np.uint8)

# Perform dilation operation
dilation = cv2.dilate(thresh, kernel, iterations = 1)

# Define the kernel for closing
kernel = np.ones((15,15), np.uint8)

# Perform closing operation
closing = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)
